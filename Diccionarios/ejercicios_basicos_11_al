"""
León Sokolowski
León Sokolowski
División H
Grupo Alpha
"""
"""
11. Crea un diccionario que represente una lista de tareas por hacer. Cada clave del diccionario debe ser el nombre de una tarea
y cada valor debe ser su estado (los estados son:  pendiente, en proceso, completada). Imprimir todas las tareas seguido de su estado
"""
tareas_hogar = {
    "colgar la ropa:" : "completada",
    "hacer la comida:" : "completada",
    "hacer la cama:" : "completada",
    "ordenar el cuarto:" : "en proceso",
    "alimentar al gato:" : "pendiente",
    "lavar los platos:" : "pendiente",
}

for clave, valor in tareas_hogar.items():
    print(clave, valor)
    
"""
12. Crea un diccionario que represente una lista de las compras. Cada clave del diccionario debe ser el nombre de un producto
y cada valor debe ser su cantidad. Pedir al usuario que ingrese el nombre del producto e imprimir la cantidad
"""
compras_super = {
    "galletitas" : 5,
    "aceite" : 1,
    "leche" : 3,
    "jugos" : 8
}

producto_ingresado = input("Ingrese el producto: ")

cantidad_de_producto_ingresado = compras_super.get(producto_ingresado , "El producto ingresado no esta en la lista de compras")
print (cantidad_de_producto_ingresado)

"""
13. Crea un diccionario que contenga el nombre y el nivel de dificultad de varios juegos de mesa. 
Luego, pedirle al usuario un nivel de dificultad, buscar los que coinciden e imprimir sus nombres
"""

info_juegos_de_mesa = {
    "Monopoly" : "intermedio",
    "Truco" : "facil",
    "Canasta" : "facil",
    "Poker" : "dificil"
}

nivel_de_dificultad = input("Ingrese el nivel de dificultad: ")

print("Usando items")
for clave, valor in info_juegos_de_mesa.items():
    if valor == nivel_de_dificultad:
        print(clave)

print("Usando keys")
for clave in info_juegos_de_mesa.keys():
    if info_juegos_de_mesa[clave] == nivel_de_dificultad:
        print(clave)

"""
14. Crea un diccionario que contenga el nombre como clave y el puntaje como valor de varios jugadores en un juego. 
Luego, pedirle al usuario el nombre del jugador y nuevo puntaje y actualizar el valor correspondiente en el diccionario.
"""
puntuacion_videojuego = {
    "Leon" : 40,
    "Tani" : 95,
    "Mati" : 70,
    "Chechu" : 100,
    "Marce" : 65,
    "Nacho" : 80,
    "Cris" : 90
}
nuevo_puntaje_nombre = input("Ingrese el nombre del jugador: ").capitalize()

while not nuevo_puntaje_nombre in puntuacion_videojuego.keys():
    mensaje = f"El jugador {nuevo_puntaje_nombre} no se encuentra en la base de datos, por favor ingrese otro: "
    nuevo_puntaje_nombre = input(mensaje)


nuevo_puntaje_valor = input("Ingrese el nuevo puntaje: ")

puntuacion_videojuego[nuevo_puntaje_nombre] = nuevo_puntaje_valor

print(f"El puntaje de  {nuevo_puntaje_nombre} fue actualizado. La tabla está así ahora: {puntuacion_videojuego}")

"""
15.Crea un diccionario que contenga el nombre y el sueldo de varios empleados. 
Luego, permite al usuario aumentar el sueldo de un empleado y actualizar el valor correspondiente en el diccionario.
"""
sueldo_empleados = {
    "Mario" : 80000,
    "Silvia" : 150000,
    "Renata" : 76500
}

nombre_empleado = input("Ingrese el nombre del empleado: ").capitalize()

while not nombre_empleado in sueldo_empleados.keys():
    mensaje = f"{nombre_empleado} no es un empleado, ingrese un nombre valido:"
    nombre_empleado = input(mensaje).capitalize()

aumento_empleado = input("Ingrese el nuevo monto del empleado: ")

while not int(aumento_empleado) > sueldo_empleados[nombre_empleado]:
    mensaje = f"¡Para realizar un aumento el nuevo monto debe ser mayor que el anterior! Ingrese uno valido: "
    aumento_empleado = input(mensaje)

sueldo_empleados [nombre_empleado] = aumento_empleado

print(f"El sueldo de {nombre_empleado} aumentó. Así quedaron los sueldos {sueldo_empleados}")

"""
16.Crea un diccionario que represente una lista de tareas pendientes, donde las claves son las tareas 
y los valores son "True" si están completadas y "False" si no lo están. 
Solicita al usuario el nombre de una tarea y modifica el valor para marcarla como completada. Imprimir el listado de tareas pendientes
"""
tareas = {
    "cocinar" : True,
    "trabajar": False,     
    "estudiar" : False,
    "limpiar" : False
}

tarea_a_completar = input("Nombrar una tarea: ")

while tareas.get(tarea_a_completar) is True:
    mensaje = "Esa tarea ya está completada, ingrese otra: "
    tarea_a_completar = input(mensaje)
else:
    tareas[tarea_a_completar] = True
    mensaje = "¡Felicidades! La tarea fue completada"
    print(mensaje)
    print(tareas)
    
"""
17.Crea un diccionario que represente las películas de un cine, donde las claves son los nombres de las películas 
y los valores son los horarios correspondientes. Modifica el horario de la película "Avengers: Endgame" a las 19:30.
"""
peliculas_de_cine = {
    "Avengers: Endgame" : "16:00",
    "The Batman" : "13:00",
    "Fight Club" : "22:45",
    "Barbie" : "15:15"
}

peliculas_de_cine["Avengers: Endgame"] = "19:30"

"""
18.Crea un diccionario que represente los juegos de una consola, donde las claves son los nombres de los juegos 
y los valores son las puntuaciones correspondientes. 
Solicita al usuario el nombre de un juego y luego su puntuación, si el juego no existe agregarlo y si existe actualizar su puntuación
"""
juegos_de_consola = {
    "The Last of Us" : 10.0,
    "God of war" : 8.5,
    "Red Dead Redemption 2" : 9
}

nombre_juego = input("Ingrese el nombre de un juego: ").capitalize()

puntuacion_juego = input("Ingrese la puntuanción que usted le da a ese videojuego: ")
juegos_de_consola[nombre_juego] = puntuacion_juego

print(f"La tabla fue actualizada: {juegos_de_consola}")

"""
19. Crea un diccionario que represente las temperaturas de una ciudad durante una semana, 
donde las claves son los días de la semana y los valores son las temperaturas correspondientes. 
Calcula la temperatura promedio de la semana.
"""
temperaturas_semana = {
    "Lunes" : 19,
    "Martes" : 17,
    "Miercoles" : 16,
    "Jueves" : 18,
    "Viernes" : 19,
    "Sabado" : 19,
    "Domingo" : 20 
}

acumulador_temperaturas = 0
cantidad_temperaturas = len(temperaturas_semana)

for valor in temperaturas_semana.values():
    acumulador_temperaturas += valor

promedio_temperaturas = acumulador_temperaturas // cantidad_temperaturas

print(f"El promedio de temperaturas de la semana es {promedio_temperaturas}")

"""
20. Crea un diccionario que represente los asientos de un avión, donde las claves son los números de asientos 
y los valores son "True" si están ocupados y "False" si no lo están. 
Solicita al usuario un número de asiento y modifica su valor para marcarlo como ocupado. Luego imprimí la lista de asientos libres
"""
asientos_avion = {
    "1" : True,
    "2": False,     
    "3" : False,
    "4" : False,
    "5" : True,
    "6" : False,
    "7" : False,
    "8" : True,
    "9" : True
}

numero_asiento = input("Ingrese su numero de asiento: ")

while asientos_avion.get(numero_asiento) is True:
    mensaje = "Ese asiento ya está ocupado, ingrese otro: "
    numero_asiento = input(mensaje)
else:
    asientos_avion[numero_asiento] = True
    mensaje = "Su asiento fue asignado con éxito"
    print(mensaje)
    print(asientos_avion)


"""
21. Crea un diccionario que represente los gastos de una persona en diferentes categorías, donde las claves son los nombres de las categorías
y los valores son los gastos correspondientes. Calcula el total de gastos de la persona.
"""
gastos_anuales = {
    "Comida" : 720000,
    "Alquiler" : 1200000,
    "Impuestos y servicios" : 300000,
    "Viaticos" : 240000
}

acumulador_total_gastos = 0

for valor in gastos_anuales.values():
    acumulador_total_gastos += valor

print(f"El total de gastos mensuales de una persona es de {acumulador_total_gastos}")

"""
22. Crea un diccionario que represente los gastos de una persona en diferentes categorías, 
donde las claves son los nombres de las categorías y los valores son los gastos correspondientes. 
Calcula el total de gastos de la persona en el mes.
"""
gastos_mensuales = {
    "Comida" : 60000,
    "Alquiler" : 100000,
    "Impuestos y servicios" : 25000,
    "Viaticos" : 20000
}

acumulador_total_gastos = 0

for valor in gastos_mensuales.values():
    acumulador_total_gastos += valor

print(f"El total de gastos mensuales de una persona es de {acumulador_total_gastos}")

"""
23. Crea un diccionario que represente los contactos de un teléfono, donde las claves son los nombres de las personas 
y los valores son los números de teléfono correspondientes. Solicitar al usuario el nombre de un contacto: agregarlo al diccionario 
en caso de que no exista. En caso de que exista modificar el número de teléfono del contacto.
"""       

contactos = {
    "Olga" : "11 9645 - 2574",
    "Marcelo" : "11 2774 - 1612",
    "Rufina" : "11 6414 - 2769",
    "Juan" : "11 6062 - 1901"
}

contacto_elegido = input("Ingrese el nombre de su contacto: ").capitalize()

numero_del_contacto = input("Ingrese el numero de telefono de su contacto: ")
contactos[contacto_elegido] = numero_del_contacto

print(f"La agenda fue actualizada: {contactos}")

